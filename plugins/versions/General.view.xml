<!--

    Copyright (C) 2009-2019 SAP SE or an SAP affiliate company. All rights reserved.

-->
<core:View controllerName="retail.pmr.promotionaloffers.plugins.versions.General"
	xmlns:core="sap.ui.core" xmlns="sap.m" xmlns:mvc="sap.ui.core.mvc"
	xmlns:f="sap.ui.layout.form"
	xmlns:l="sap.ui.layout" height="auto">

		<f:Form editable="true">
			<f:layout>
				<f:ResponsiveGridLayout
					columnsL="{= ${Content>/Editable} === false ? 2 : 3}"
					columnsM="{= ${Content>/Editable} === false ? 2 : 3}"
					labelSpanL="{= ${Content>/Editable} === false ? 4 : 12}"
					labelSpanM="{= ${Content>/Editable} === false ? 4 : 12}" />
			</f:layout>
			<f:formContainers>
				<f:FormContainer visible="{Content>/Editable}">
					<f:formElements>
						<f:FormElement>
							<f:label>
								<Label text="{i18n>CreateVersion.General.versionName}" required="{Content>/Editable}" labelFor="versionName"/>
							</f:label>
							<f:fields>
								<Input id="versionName" width="100%" type="Text" value="{/Name}"
									change="onNameChanged" maxLength="40"/>
							</f:fields>
						</f:FormElement>
						<f:FormElement label="{i18n>CreateVersion.General.Description}">
							<f:fields>
								<TextArea rows="5"
									width="100%"
									id="versionGeneralDescription"
									change="validateForm" 
									value="{/Description}"
									maxLength="255"/>
							</f:fields>
						</f:FormElement>
					</f:formElements>
				</f:FormContainer>
				<f:FormContainer title="{= ${Content>/Editable} === false ? ${i18n>Offer.Display.Information} : ''}">
					<f:formElements>
						<f:FormElement visible="{Content>/TokenVisible}">
							<f:label>
								<Label text="{i18n>CreateVersion.General.LocationHierarchy}" required="{Content>/Editable}" />
							</f:label>
							<f:fields>
								<MultiInput
									id="generalLocation"
									showSuggestion="true"
									showValueHelp="true"
									editable="{Content>/Editable}"
									valueHelpRequest="handleLocationComplexSearch"
									suggest="onLocationSuggest"
									suggestionItemSelected="locationSuggestionItemSelected"
									startSuggestion="3"
									tokenChange="onLocationChange" 
									valueHelpOnly = "true"/>
								
							</f:fields>
						</f:FormElement>
						<f:FormElement visible="{= ${Content>/TokenVisible} === false}">
							<f:label>
								<Label text="{i18n>CreateVersion.General.LocationHierarchy}" required="{Content>/Editable}" />
							</f:label>
							<f:fields>
								<Text 
									text="{Content>/LocationText}"
									/>
							</f:fields>
						</f:FormElement>		
						<f:FormElement label="{i18n>CreateOffer.General.PromotionType}">
							<f:fields>
								<ComboBox width="100%" id="generalPromotionType"
									editable="{Content>/Editable}"
									enabled="{Content>/PromotionTypeEnabled}"
									selectedKey="{/PromotionType}"
									items="{
										path: 'Content>/PromotionTypeSet',
										sorter: { path: 'Name' }
							        }">
									<core:Item key="{Content>PromoType}" text="{Content>Description}" />
								</ComboBox>
							</f:fields>
						</f:FormElement>
						<f:FormElement label="{i18n>CreateOffer.General.LeadingCategory}">
							<Input
								id="generalLeadingCategory"
								showSuggestion="true"
								showValueHelp="true"
								suggest="onLeadingCategorySuggest"
								valueHelpRequest="handleLeagingCategoryComplexSearch"
								suggestionItems="{Content>/LeadingCategoriesSet}"
								suggestionItemSelected="onLeadingCategorySuggestionSelect"
								change="leadingCategoryValueChanged"
								busy="{Content>/LeadingCategoryBusy}"
								editable="{Content>/Editable}"
								value="{/LeadingCategoryName}">
								<suggestionItems>
									<core:Item
										key="{Content>Id}"
										text="{
											parts: [
												{path:'Content>ExtId'},
												{path:'i18n>CreateOffer.General.EmptySpace'},
												{path:'Content>Name'}],
											formatter: 'jQuery.sap.formatMessage'}" />
								</suggestionItems>
							</Input>
						</f:FormElement>
						<f:FormElement>
							<f:label>
								<Label
									visible="{= ${Content>/Editable} === false ? true : false}"
									text="{i18n>CreateOffer.General.RegularPriceOnly}" />
							</f:label>	
							<f:fields>
								<CheckBox
									text="{= ${Content>/Editable} === true ? ${i18n>CreateOffer.General.RegularPriceOnly} : ''}"
									selected="{/RegularPriceOnly}"
									editable="{Content>/Editable}" />
							</f:fields>
						</f:FormElement>
					</f:formElements>
				</f:FormContainer>
				<f:FormContainer title="{= ${Content>/Editable} === false ? ${i18n>Offer.Display.Validity} : ''}">
					<f:formElements>
						<f:FormElement visible="{Content>/Editable}">
							<f:label>
								<Label
									text="{i18n>CreateOffer.General.ValidityStart}"
									required="{Content>/Editable}" labelFor="versionStart"/>
							</f:label>						
							<f:fields>
								<DatePicker 
									id="versionStart"
									width="100%"
									dateValue="{/StartOfOffer}"
									editable="{Content>/Editable}" 
									change="onOfferStartDateChange" >
									<layoutData>
										<l:GridData span="{
												path : 'Time>/Selected',
												formatter : '.timePickerVisible'
											}"/>
										</layoutData>
									</DatePicker>
								<TimePicker
		         					width="100%"
									dateValue="{Time>/StartTime}"
									value="{
										path : 'Time>/StartTime',
										formatter : '.timeLabelValueFormatter'
									}"
									visible="{= ${Time>/Selected} !== true }"
									editable="{Content>/Editable}"
									change="onOfferStartTimeChange">
										<layoutData>
												<l:GridData span="L6 M6 S6"/>
										</layoutData>
								</TimePicker>
							</f:fields>
						</f:FormElement>
						
						<f:FormElement visible="{Content>/Editable}">
							<f:label>
								<Label
									text="{i18n>CreateOffer.General.ValidityEnd}"
									required="{Content>/Editable}" 
									labelFor="versionEnd"/>
							</f:label>								
							<f:fields>
					       		<DatePicker 
					       			id="versionEnd"
					         		width="100%"
									dateValue="{/EndOfOffer}"
									editable="{Content>/Editable}" 
									change="onOfferEndDateChange" >
									<layoutData>
											<l:GridData span="{
												path : 'Time>/Selected',
												formatter : '.timePickerVisible'
											}"/>
									</layoutData>
									</DatePicker>
								<TimePicker
									width="100%"
									dateValue="{Time>/EndTime}"
									value="{
										path : 'Time>/EndTime',
										formatter : '.timeLabelValueFormatter'
									}"									
									visible="{= ${Time>/Selected} !== true }"
									editable="{Content>/Editable}"
									change="onOfferEndTimeChange">
									<layoutData>
											<l:GridData span="L6 M6 S6"/>
									</layoutData>
								</TimePicker>
								
							</f:fields>
						</f:FormElement>
						<f:FormElement visible="{Content>/Editable}">
							<f:fields>
								<CheckBox
									text="{= ${Content>/Editable} === true ? ${i18n>CreateOffer.General.AllDayOffer} : ''}"
									
									selected="{Time>/Selected}"
									select="onAllDaySelect" 
									editable="{Content>/Editable}"/>
							</f:fields>
						</f:FormElement>
						<f:FormElement label="{i18n>CreateOffer.General.Summary}">
							<f:fields>
							<l:VerticalLayout>
								<Input editable="false"
										value="{
										parts: [
											{path: 'i18n>CreateOffer.General.Summary.From'},
											{path: '/StartOfOffer',
											 type: 'sap.ui.model.type.DateTime',
											 formatOptions: { style: 'medium'}},
											{path: 'Time>/StartWeek'}
										],
										formatter: 'retail.pmr.promotionaloffers.utils.Formatter.summaryLine'
										}"/>
								<Input editable="false"
										value="{
										parts: [
											{path: 'i18n>CreateOffer.General.Summary.To'},
											{path: '/EndOfOffer',
											 type: 'sap.ui.model.type.DateTime',
											 formatOptions: { style: 'medium'}},
											{path: 'Time>/EndWeek'}
										],
										formatter: 'retail.pmr.promotionaloffers.utils.Formatter.summaryLine'
										}"/>
							</l:VerticalLayout>	
							</f:fields>
						</f:FormElement>
					</f:formElements>
				</f:FormContainer>
			</f:formContainers>
		</f:Form>
</core:View>